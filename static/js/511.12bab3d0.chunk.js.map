{"version":3,"file":"static/js/511.12bab3d0.chunk.js","mappings":"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","sources":["components/contactForm/ContactForm.jsx","components/filter/Filter.jsx","webpack://your-phonebook/./src/components/contactList/ContactList.module.css?7e3b","components/editModal/EditModal.jsx","components/contactList/ContactList.jsx","webpack://your-phonebook/./src/page/contacts/Contacts.module.css?0cea","page/contacts/Contacts.jsx"],"sourcesContent":["import React from 'react';\nimport { addNewContacts } from '../../redux/contacts/contactsOperations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Form, Input, notification } from 'antd';\nimport { getContactsSelector } from '../../redux/selectors';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n  const { status, item: contacts } = useSelector(getContactsSelector);\n\n\n  const notify = ({ message, type, description }) => {\n    notification[type]({\n      message,\n      description,\n    });\n  };\n\n  const handleSubmit = ({ name, number }) => {\n    const isContactExist = contacts.find((contact) => contact.name.toLowerCase() === name.toLowerCase());\n    form.resetFields();\n\n    if (isContactExist) {\n      notify({\n        type: 'warning',\n        message: `${name} is already in contacts.`,\n      });\n    } else {\n      dispatch(addNewContacts({ name, number }));\n      notify({\n        type: 'success',\n        message: 'The contact has been successfully added',\n      });\n    }\n  };\n\n  return (\n    <Form\n      form={form}\n      name='add-contact'\n      style={{\n        width: 400,\n      }}\n\n      onFinish={handleSubmit}\n    >\n      <Form.Item\n        name='name'\n        rules={[\n          {\n            pattern: new RegExp(/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/),\n            message: 'Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d\\'Artagnan',\n          },\n          { required: true, message: 'Name number is mandatory field' },\n        ]}\n      >\n        <Input placeholder='Contact name' />\n      </Form.Item>\n\n      <Form.Item\n        name='number'\n        rules={[\n          {\n            required: true,\n            message: 'Phone number is mandatory field',\n          },\n          {\n            pattern: new RegExp(/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/),\n            message: 'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n          },\n        ]}\n      >\n        <Input placeholder='Phone number' />\n      </Form.Item>\n\n      <Form.Item>\n        <Button type='primary' htmlType='submit' block disabled={status === 'loading'}>\n          Add contact\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterItem } from '../../redux/contacts/contactsSlice';\nimport { filterContactsSelector } from '../../redux/selectors';\nimport Search from 'antd/es/input/Search';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(filterContactsSelector);\n  const changeFilter = (e) => {\n    dispatch(filterItem(e.target.value));\n  };\n\n  return (\n    <Search\n      placeholder=\"Find contacts\"\n      style={{ width: 400 }}\n      type='text'\n      value={filter}\n      onChange={changeFilter}\n    />\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"ContactList_wrap__g7m5J\",\"itemContact\":\"ContactList_itemContact__v7UVz\",\"list\":\"ContactList_list__S-drv\",\"item\":\"ContactList_item__-Qv6N\",\"popover\":\"ContactList_popover__Z+1Tk\",\"scroll\":\"ContactList_scroll__jZr86\",\"scrollbar\":\"ContactList_scrollbar__MKELG\",\"notContact\":\"ContactList_notContact__bXNaE\"};","import React, { useEffect } from 'react';\nimport { Button, Form, Input, Modal, notification } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContactsSelector } from '../../redux/selectors';\nimport { updateContacts } from '../../redux/contacts/contactsOperations';\n\nconst EditModal = ({ open, onOk, onCancel, dataModal }) => {\n  const [form] = Form.useForm();\n  const { status, item: contacts } = useSelector(getContactsSelector);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    form.setFieldsValue(dataModal);\n  }, [dataModal, form]);\n\n  const notify = ({ message, type, description }) => {\n    notification[type]({\n      message,\n      description,\n    });\n  };\n\n  const handleSubmit = (data) => {\n    const { name } = data;\n    const isContactExist = contacts.find((contact) => contact.name.toLowerCase() === name.toLowerCase());\n    form.resetFields();\n    if (isContactExist) {\n      notify({\n        type: 'warning',\n        message: `${name} is already in contacts.`,\n      });\n    } else {\n      dispatch(updateContacts({ ...dataModal, ...data }));\n      onOk();\n      notify({\n        type: 'success',\n        message: 'The contact has been successfully added',\n      });\n    }\n  };\n\n  return (\n    <>\n      <Modal forceRender footer={null} title='Edit your contact' open={open} onOk={onOk} onCancel={onCancel}>\n        <Form\n          form={form}\n          name='edit-contact'\n          style={{\n            width: 450,\n          }}\n          onFinish={handleSubmit}\n        >\n          <Form.Item\n            name='name'\n            rules={[\n              {\n                pattern: new RegExp(/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/),\n                message: 'Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d\\'Artagnan',\n              },\n              { required: true, message: 'Name number is mandatory field' },\n            ]}\n          >\n            <Input placeholder='Contact name' />\n          </Form.Item>\n\n          <Form.Item\n            name='number'\n            rules={[\n              {\n                required: true,\n                message: 'Phone number is mandatory field',\n              },\n              {\n                pattern: new RegExp(/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/),\n                message: 'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n              },\n            ]}\n          >\n            <Input placeholder='Phone number' />\n          </Form.Item>\n\n          <Form.Item>\n            <Button type='primary' htmlType='submit' block disabled={status === 'loading'}>\n              Edit contact\n            </Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </>\n  );\n};\n\nexport default EditModal;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContacts } from '../../redux/contacts/contactsOperations';\nimport { filterContactsSelector, getItemsSelector } from '../../redux/selectors';\nimport { List, Popover } from 'antd';\nimport Avatar from 'react-avatar';\nimport { ImBin, ImPencil } from 'react-icons/im';\nimport { BsThreeDots } from 'react-icons/bs';\nimport s from './ContactList.module.css';\nimport EditModal from '../editModal/EditModal';\n\nconst ContactList = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [dataModal, setDataModal] = useState(null)\n  const dispatch = useDispatch();\n  const contacts = useSelector(getItemsSelector);\n  const filter = useSelector(filterContactsSelector);\n\n  const showModal = (data) => {\n    setIsModalOpen(true);\n    setDataModal(data)\n  };\n\n  const handleOk = () => {\n    setIsModalOpen(false);\n    setDataModal(null);\n  };\n\n  const handleCancel = () => {\n    setIsModalOpen(false);\n    setDataModal(null);\n  };\n\n  const content = (data) => (\n   <ul className={s.list}>\n      <li className={s.popover}><ImPencil onClick={() => showModal(data)}>update</ImPencil></li>\n      <li className={s.item}><span>|</span></li>\n      <li className={`${s.item} ${s.popover}`}><ImBin onClick={() => dispatch(deleteContacts(data.id))}>delete</ImBin></li>\n    </ul>\n  );\n\n  return (\n    <List className={s.wrap}>\n      {contacts\n        .filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\n        .map(({ id, name, number }) => (\n          <List.Item key={id}>\n            <Avatar name={name} size='40' />\n            <List.Item.Meta\n              title={<a href='https://ant.design'>{`${name}`}</a>}\n              description={`${number}`}\n              className={s.itemContact}\n            />\n            <Popover className={s.popover} placement='left' content={content({ id, name, number })} trigger='click'>\n              <BsThreeDots />\n            </Popover>\n          </List.Item>\n        ))}\n      <div className={s.notContact}>\n        {!contacts.length && <span>No contacts</span>}\n      </div>\n      <EditModal open={isModalOpen} onOk={handleOk} onCancel={handleCancel} dataModal={dataModal}/>\n    </List>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"Contacts_wrap__xPKRM\",\"contacts\":\"Contacts_contacts__fxVP2\",\"title\":\"Contacts_title__N+GvO\",\"text\":\"Contacts_text__y3HVS\"};","import React, { useEffect } from 'react';\nimport { notification } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ContactForm from '../../components/contactForm';\nimport Filter from '../../components/filter';\nimport Loader from '../../components/Loader';\nimport ContactList from '../../components/contactList';\nimport { getContactsSelector, getNameSelector } from '../../redux/selectors';\nimport { fetchContacts } from '../../redux/contacts/contactsOperations';\nimport s from './Contacts.module.css';\n\nconst Contacts = () => {\n  const { status, error } = useSelector(getContactsSelector);\n  const isTokenSettled = useSelector(getNameSelector);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isTokenSettled) {\n      dispatch(fetchContacts());\n    }\n  }, [dispatch, isTokenSettled]);\n\n  if (error) {\n    notification.error({ message: error });\n  }\n\n  return (\n    <div className={s.wrap}>\n      <div>\n        <h1 className={s.title}>Create a new contact</h1>\n        <ContactForm/>\n      </div>\n\n      <div className={s.contacts}>\n        <p className={s.text}> Find contacts by name</p>\n        <Filter />\n        {status === 'loading' && <Loader />}\n        <ContactList />\n      </div>\n\n    </div>\n\n  );\n};\n\nexport default Contacts;\n"],"names":["dispatch","useDispatch","Form","form","useSelector","getContactsSelector","status","contacts","item","notify","message","type","description","notification","name","style","width","onFinish","number","isContactExist","find","contact","toLowerCase","resetFields","addNewContacts","rules","pattern","RegExp","required","placeholder","htmlType","block","disabled","filter","filterContactsSelector","Search","value","onChange","e","filterItem","target","open","onOk","onCancel","dataModal","useEffect","setFieldsValue","forceRender","footer","title","data","updateContacts","useState","isModalOpen","setIsModalOpen","setDataModal","getItemsSelector","content","className","s","onClick","showModal","deleteContacts","id","includes","map","size","href","placement","trigger","length","error","isTokenSettled","getNameSelector","fetchContacts","Loader"],"sourceRoot":""}